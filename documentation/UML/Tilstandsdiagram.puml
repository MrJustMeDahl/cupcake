@startuml

scale 350 width
[*] --> index
index --> login : User = null
login --> register : Create a new User
register --> login : New User created in DB
login --> welcome : User = User
welcome --> shoppingcart : Add selected cupcake and quantity to shoppingcart
login --> admin : User = Admin
shoppingcart --> orders : Accept current shoppingcart (paid = true or false)
welcome --> Logout.servlet
shoppingcart --> Logout.servlet
orders --> Logout.servlet
admin --> Logout.servlet
Logout.servlet --> login: return to loginscreen

login --> error : if forward or response failed
register --> error : if forward failed
welcome --> error : if retrieval of cupcakes failed
shoppingcart --> error : if retrieval of order failed
admin --> error : if connection to DB failed





state login{
login --> Login.Servlet : checks the user in DB and sets the user/role in sessionscope
Login.Servlet --> Welcome.servlet : forward the sessionscope

 state Login.Servlet {
 }
}

state register{
register --> Register.servlet: checks if user exists in DB and create a new user
Register.servlet --> login: If create user was succesfull, forward to the loginpage
 state Register.servlet{
 }
}

state welcome{

welcome --> Welcome.servlet : Request all cupcake bases and toppings
Welcome.servlet --> welcome : Retrieve all bases and toppings, and set user
welcome --> AddCupcakeToOrder.servlet: Send the selected cupcake and quantity to DB
AddCupcakeToOrder.servlet --> welcome : return to former selection state
 state Welcome.servlet{

  state CupcakeBaseFacade{
  }

  state CupcakeBaseMapper{
  }

  state CupcakeToppingFacade{
  }

  state CupcakeToppingMapper{
  }

 }
 state AddCupcakeToOrder.servlet{

 }

}

state shoppingcart{
shoppingcart --> Indkøbskurv.servlet : Check for existing orders
Indkøbskurv.servlet --> shoppingcart : return with existing orders or create new
shoppingcart --> OrderAndPayment.servlet : either order or pay and order
OrderAndPayment.servlet --> shoppingcart : send cupcakes to ordered list
shoppingcart --> RemoveCupcakeFromOrder.servlet: Remove selected cupcake
RemoveCupcakeFromOrder.servlet --> shoppingcart : Selected cupcake is removed

 state Indkøbskurv.servlet{
}
 state OrderAndPayment.servlet{
 }

 state RemoveCupcakeFromOrder.servlet{
 }

 }

state admin{
admin --> Admin.servlet : Retrieve all users and orders
Admin.servlet --> admin : return with all users and orders

 state Admin.servlet{
 }

 state AdminUpdatePaid.servlet{
 AdminUpdatePaid.servlet --> Admin.servlet : Change paid = (true or false)
 }

 state GiveUserMoney.servlet{
 GiveUserMoney.servlet --> Admin.servlet : Update balance
 }

 state DeleteOrder.servlet{

 }

}

state error {

}

state Logout.servlet{

}

state ConnectionPool{
}
@enduml